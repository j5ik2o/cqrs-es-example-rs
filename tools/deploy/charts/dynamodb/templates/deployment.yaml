# Copyright 2020 Keyporttech Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for dynamodb-helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dynamodb-helm-chart.fullname" . }}
  labels:
    {{- include "dynamodb-helm-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "dynamodb-helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "dynamodb-helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dynamodb-helm-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: dynamodb
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dynamodb.image.repository }}:{{ .Values.dynamodb.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dynamodb.image.pullPolicy }}
          args: [ "-Djava.library.path=./DynamoDBLocal_lib", "-jar", "DynamoDBLocal.jar", "-dbPath", "/mnt/data", "-sharedDb" ]
          ports:
            - name: dynamodb
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: dynamodb
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: dynamodb
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: dynamodb-data
              mountPath: /mnt/data
        - name: admin
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.admin.image.repository }}:{{ .Values.admin.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.admin.image.pullPolicy }}
          ports:
            - name: dynamodbadmin
              containerPort: 8001
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: dynamodbadmin
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: dynamodbadmin
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: dynamodb-data
          {{- if eq .Values.storageType "pvc" }}
          persistentVolumeClaim:
            claimName: dynamodb
          {{- else if eq .Values.storageType "directVolume" }}
          {{- toYaml .Values.storageVolume | nindent 10 }}
          {{- else }}
          emptyDir: { }
          {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
