name: ci
on:
  push:
    branches: [main]
    paths-ignore:
    - 'README.md'
    - 'docs/**'
    - 'assets/**'
    - 'tools/**'
  pull_request:
    branches: [main]
    paths-ignore:
    - 'README.md'
    - 'docs/**'
    - 'assets/**'
    - 'tools/**'
  schedule:
    - cron: 0 0 * * *
env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 1
  RUST_BACKTRACE: 1
  TEST_TIME_FACTOR: 2
  AWS_REGION: ap-northeast-1
  ARCH: x86_64
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - run: cargo +nightly fmt -- --check
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo test --verbose --release
  e2e:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: |
          docker buildx create --name amd-arm --driver docker-container --platform linux/amd64
          cd ./tools/e2e-test && make build && cd ../../
          ./tools/scripts/docker-build-write-api-server.sh
          ./tools/scripts/docker-build-read-model-updater-local.sh
          ./tools/scripts/docker-build-read-api-server.sh
          ./tools/scripts/docker-compose-e2e-test.sh