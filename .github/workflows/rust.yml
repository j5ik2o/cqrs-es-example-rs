name: ci
on:
  push:
    branches: [main]
    paths-ignore:
    - 'README.md'
    - 'docs/**'
    - 'assets/**'
    - 'tools/**'
  pull_request:
    branches: [main]
    paths-ignore:
    - 'README.md'
    - 'docs/**'
    - 'assets/**'
    - 'tools/**'
  schedule:
    - cron: 0 0 * * *
env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 1
  RUST_BACKTRACE: 1
  TEST_TIME_FACTOR: 2
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - run: cargo +nightly fmt -- --check
  test-infrastructure:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo test --verbose --release -p infrastructure
  test-command-domain:
    runs-on: ubuntu-latest
    needs: [lint, test-infrastructure]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo test --verbose --release -p command-domain
  test-command-interface-adaptor-impl:
    runs-on: ubuntu-latest
    needs:
      [lint, test-infrastructure, test-command-processor, test-command-domain]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: KEEP_CONTAINERS=true cargo test --verbose --release -p command-interface-adaptor-impl
        timeout-minutes: 30
  test-command-processor:
    runs-on: ubuntu-latest
    needs: [lint, test-command-domain]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo test --verbose --release -p command-processor
  test-query-interface-adaptor:
    runs-on: ubuntu-latest
    needs: [lint, test-infrastructure]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo test --verbose --release -p query-interface-adaptor
  test-write-api-server:
    runs-on: ubuntu-latest
    needs: [ test-infrastructure, test-command-domain, test-command-interface-adaptor-impl, test-command-processor ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo test --verbose --release -p write-api-server
  test-read-model-updater:
    runs-on: ubuntu-latest
    needs: [test-infrastructure, test-command-domain]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo test --verbose --release -p read-model-updater
  test-read-api-server:
    runs-on: ubuntu-latest
    needs: [test-infrastructure, test-query-interface-adaptor]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo test --verbose --release -p read-api-server
